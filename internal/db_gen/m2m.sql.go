// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: m2m.sql

package db_gen

import (
	"context"
)

const createM2MRoleTemplate = `-- name: CreateM2MRoleTemplate :exec
INSERT INTO m2m_session_templates (id, roles)
VALUES ($1, $2)
`

type CreateM2MRoleTemplateParams struct {
	ID    string   `json:"id"`
	Roles []string `json:"roles"`
}

func (q *Queries) CreateM2MRoleTemplate(ctx context.Context, arg CreateM2MRoleTemplateParams) error {
	_, err := q.db.Exec(ctx, createM2MRoleTemplate, arg.ID, arg.Roles)
	return err
}

const getM2MRoleTemplates = `-- name: GetM2MRoleTemplates :many
SELECT id, roles FROM m2m_session_templates
`

func (q *Queries) GetM2MRoleTemplates(ctx context.Context) ([]M2mSessionTemplate, error) {
	rows, err := q.db.Query(ctx, getM2MRoleTemplates)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []M2mSessionTemplate{}
	for rows.Next() {
		var i M2mSessionTemplate
		if err := rows.Scan(&i.ID, &i.Roles); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
