// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: settings.sql

package db_gen

import (
	"context"
)

const getSettingsByKey = `-- name: GetSettingsByKey :one
SELECT value FROM instance_settings
WHERE key = $1
`

func (q *Queries) GetSettingsByKey(ctx context.Context, key string) (string, error) {
	row := q.db.QueryRow(ctx, getSettingsByKey, key)
	var value string
	err := row.Scan(&value)
	return value, err
}

const upsertSetting = `-- name: UpsertSetting :exec
INSERT INTO instance_settings (key, value)
VALUES ($1, $2)
ON CONFLICT (key) DO UPDATE
SET value = EXCLUDED.value
`

type UpsertSettingParams struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

func (q *Queries) UpsertSetting(ctx context.Context, arg UpsertSettingParams) error {
	_, err := q.db.Exec(ctx, upsertSetting, arg.Key, arg.Value)
	return err
}
